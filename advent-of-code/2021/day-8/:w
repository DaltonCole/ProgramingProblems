use std::env;
use std::fs;
use std::io;

const PART: u32 = 2;

fn read_from_file(f_name: &str) -> Result<String, io::Error> {
    fs::read_to_string(f_name)
}

fn get_output(contents: &str) -> (Vec<Vec<String>>, Vec<Vec<String>>) {
    let mut signals: Vec<Vec<String>> = Vec::new();
    let mut output: Vec<Vec<String>> = Vec::new();

    for line in contents.lines() {
        let split = line.trim().split('|');
        signals.push(split[0].split_whitespace());
        output.push(split[1].split_whitespace());
    }

    (signals, output)
}

fn main() {
    let args: Vec<String> = env::args().collect();
    let file_name = &args[1];
    let contents = read_from_file(file_name).unwrap();
    let (signals, output) = get_output(&contents);

    println!("{:#?}", signals);
    println!("{:#?}", output);
}
